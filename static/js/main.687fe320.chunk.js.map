{"version":3,"sources":["redux/planner/plannerActions.js","redux/planner/plannerReducer.js","redux/planner/plannerMiddlewar.js","redux/store.js","redux/planner/plannerSelectors.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetFormContainer.js","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.jsx","components/Stat/Stat.jsx","components/Values/Values.jsx","components/App/App.jsx","components/App/AppContainer.js","index.js"],"names":["Type","combineReducers","budget","state","action","type","payload","expense","filter","item","id","logger","next","rootReducer","palenner","plannerReducer","enhancer","applyMiddleware","palnnerMiddlewar","store","createStore","composeWithDevTools","getBudget","getExpenses","calculateTotalExpenses","createSelector","expenses","reduce","total","amount","calculateBalance","Form","onSubmit","children","StyledForm","defaultProps","styled","form","Label","customStyles","StyledLabel","label","props","Input","name","StyledInput","placeholder","input","Button","onClick","StyledButton","button","BudgetForm","onSave","e","preventDefault","Number","target","querySelector","value","reset","connect","dispatch","plannerActions","ExpenseForm","resultInput","shortid","generate","ExpensesTable","items","onRemove","Table","map","key","table","Stat","isPositive","Container","Value","div","p","section","Values","balance","App","removeExpense","totalExpenses","length","plannerSelectors","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.687fe320.chunk.js","sourcesContent":["export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addBudget = value => ({\n  type: Type.ADD_BUDGET,\n  payload: value,\n});\n\nexport const addExpense = value => ({\n  type: Type.ADD_EXPENSE,\n  payload: { name: value.name, amount: value.amount, id: value.id },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './plannerActions';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case Type.ADD_BUDGET:\n      return state + action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expenseReducer = (state = [], action) => {\n  switch (action.type) {\n    case Type.ADD_EXPENSE:\n      return [...state, action.payload];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget: budgetReducer,\n  expense: expenseReducer,\n});\n","const logger = () => next => action => {\n  // console.log(action, store.getState());\n  next(action);\n};\nexport default logger;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport plannerReducer from './planner/plannerReducer';\nimport palnnerMiddlewar from './planner/plannerMiddlewar';\n\nconst rootReducer = combineReducers({ palenner: plannerReducer });\n\nconst enhancer = applyMiddleware(palnnerMiddlewar);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\nexport default store;\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.palenner.budget;\nexport const getExpenses = state => state.palenner.expense;\n\nexport const calculateTotalExpenses = createSelector(\n  getExpenses,\n  expenses => expenses.reduce((total, expense) => total + expense.amount, 0),\n);\nexport const calculateBalance = createSelector(\n  [getBudget, calculateTotalExpenses],\n  (budget, expenses) => budget - expenses,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ onSubmit, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.defaultProps = {\n  onSubmit: () => null,\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  customStyles: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Label;\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ type, name }) => (\n  <StyledInput\n    type={type}\n    name={name}\n    placeholder={name === 'amount' ? 'Type amount...' : 'Type name...'}\n  />\n);\n\nexport default Input;\n\nInput.defaultProps = {\n  type: ' text',\n  name: '',\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, label, onClick }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  label: '',\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nconst BudgetForm = ({ onSave }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave(Number(e.target.querySelector('input').value));\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter your total budget\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Save\" type=\"submit\" />\n    </Form>\n  );\n};\n\nBudgetForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default BudgetForm;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/plannerActions';\nimport BudgetForm from './BudgetForm.jsx';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addBudget(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nconst ExpenseForm = ({ onSave }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const resultInput = {\n      name: e.target.querySelector('input[name=\"name\"]').value,\n      amount: Number(e.target.querySelector('input[name=\"amount\"]').value),\n      id: shortid.generate(),\n    };\n    onSave(resultInput);\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter expense name\n        <Input type=\"text\" name=\"name\" />\n      </Label>\n      <Label customStyles={labelStyles}>\n        Enter expense amount\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Add\" type=\"submit\" />\n    </Form>\n  );\n};\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ExpenseForm;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/plannerActions';\nimport ExpenseForm from './ExpenseForm.jsx';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(plannerActions.addExpense(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\n\nconst ExpensesTable = ({ items, onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nexport default ExpensesTable;\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.defaultProps = {\n  isPositive: true,\n};\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Stat;\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Stat from '../Stat/Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive={budget >= 0} />\n    <Stat label=\"Expenses\" value={expenses} isPositive={expenses >= 0} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nexport default Values;\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport BudgetForm from '../BudgetForm/BudgetFormContainer.js';\nimport ExpenseForm from '../ExpenseForm/ExpenseFormContainer.js';\nimport ExpensesTable from '../ExpensesTable/ExpensesTable';\nimport Values from '../Values/Values';\n\nconst App = ({ budget, expenses, removeExpense, totalExpenses, balance }) => (\n  <Container>\n    <BudgetForm />\n    <Values budget={budget} expenses={totalExpenses} balance={balance} />\n    <ExpenseForm />\n    {expenses.length > 0 && (\n      <ExpensesTable items={expenses} onRemove={removeExpense} />\n    )}\n  </Container>\n);\n\nApp.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  totalExpenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default App;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { connect } from 'react-redux';\nimport * as plannerActions from '../../redux/planner/plannerActions';\nimport * as plannerSelectors from '../../redux/planner/plannerSelectors';\nimport App from './App.jsx';\n\nconst mapStateToProps = state => ({\n  budget: plannerSelectors.getBudget(state),\n  expenses: plannerSelectors.getExpenses(state),\n  totalExpenses: plannerSelectors.calculateTotalExpenses(state),\n  balance: plannerSelectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeExpense: id => dispatch(plannerActions.removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/AppContainer';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}